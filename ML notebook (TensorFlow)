# ==============================
# STEP 1: Mount Google Drive
# ==============================
from google.colab import drive
drive.mount('/content/drive')

# ==============================
# STEP 2: Install Required Libraries
# (Usually pre-installed in Colab, but let's ensure)
# ==============================
!pip install tensorflow pandas matplotlib scikit-learn

# ==============================
# STEP 3: Import Libraries
# ==============================
import tensorflow as tf
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.datasets import load_iris
from sklearn.preprocessing import StandardScaler

# ==============================
# STEP 4: Load Example Dataset
# We'll use the Iris dataset
# ==============================
iris = load_iris()
X = iris.data
y = iris.target

# Normalize the features
scaler = StandardScaler()
X = scaler.fit_transform(X)

# Split into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# ==============================
# STEP 5: Build a Simple Neural Network Model
# ==============================
model = tf.keras.models.Sequential([
    tf.keras.layers.Dense(10, activation='relu', input_shape=(X_train.shape[1],)),
    tf.keras.layers.Dense(8, activation='relu'),
    tf.keras.layers.Dense(3, activation='softmax')  # 3 classes in Iris dataset
])

model.compile(optimizer='adam',
              loss='sparse_categorical_crossentropy',
              metrics=['accuracy'])

# ==============================
# STEP 6: Train the Model
# ==============================
history = model.fit(X_train, y_train, epochs=50, validation_data=(X_test, y_test))

# ==============================
# STEP 7: Evaluate the Model
# ==============================
loss, accuracy = model.evaluate(X_test, y_test)
print(f"Test Accuracy: {accuracy*100:.2f}%")

# ==============================
# STEP 8: Save the Model to Google Drive
# ==============================
model_save_path = '/content/drive/MyDrive/ml_model/iris_model.h5'
model.save(model_save_path)
print(f"Model saved to {model_save_path}")

# ==============================
# STEP 9: Plot Training History
# ==============================
plt.plot(history.history['accuracy'], label='Train Accuracy')
plt.plot(history.history['val_accuracy'], label='Validation Accuracy')
plt.xlabel('Epochs')
plt.ylabel('Accuracy')
plt.legend()
plt.show()
